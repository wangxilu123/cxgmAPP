<configuration>


    <!-- <property resource= "bootstrap.properties"/> -->

    <!-- <property name="FILE_NAME" value="${spring.application.name}"/> -->
    <springProperty scope="context" name = "FILE_NAME" source = "spring.application.name"/>
    <property name="LOG_FILE" value="../logs/${FILE_NAME}.log"/>

    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <!-- encoder 默认配置为PatternLayoutEncoder -->
        <encoder>
            <pattern>%level | %d | [${FILE_NAME},%X{X-B3-TraceId:-},%X{X-B3-SpanId:-},%X{X-Span-Export:-}] | %thread %logger | %msg%n</pattern>
            <charset>UTF-8</charset>
        </encoder>
    </appender>

    <appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <File>${LOG_FILE}</File>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${LOG_FILE}.%d{yyyy-MM-dd}.log%i.gz</fileNamePattern>
            <!-- 保留归档文件的最大数量。 -->
            <!-- 本例中由于使用了时间作为滚动策略，且fileNamePattern中最小单位为天，所以归档文件保存30天，超过30天将被删除 -->
            <maxHistory>30</maxHistory>
            <!-- 基于大小和时间的归档是强制性的 -->
            <!-- 启用大小限制，则fileNamePattern中需要有 %i 的配置 -->
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>100MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder>
            <pattern>%level | %d | [${FILE_NAME},%X{X-B3-TraceId:-},%X{X-B3-SpanId:-},%X{X-Span-Export:-}] | %thread %logger | %msg%n</pattern>
            <charset>UTF-8</charset>
        </encoder>
    </appender>

    <!-- 异步输出 -->
    <appender name="ASYNC" class="ch.qos.logback.classic.AsyncAppender">
        <!-- 不丢失日志.默认的,如果队列的80%已满,则会丢弃TRACT、DEBUG、INFO级别的日志 -->
        <discardingThreshold>0</discardingThreshold>
        <!-- 更改默认的队列的深度,该值会影响性能.默认值为256 -->
        <queueSize>512</queueSize>
        <!-- 添加附加的appender,最多只能添加一个 -->
        <appender-ref ref="FILE"/>
    </appender>

    <!-- ##################以下为经常改动的配置#################### -->

    <!-- 这一句至关重要如果没有，就无法输出sql语句 -->
    <logger name="com.fzj" level="${logging.level.root}"></logger>
    <!-- <logger name="org.springframework.data.redis" level="ERROR"></logger>
    <logger name="org.springframework.session.data.redis" level="ERROR"></logger>
    <logger name="org.springframework.session.web.http.SessionRepositoryFilter" level="ERROR"></logger> -->

    <!-- ##################不要忘记修改第三行的日志文件名称哦！#################### -->
    <root level="${logging.level.root}">
        <appender-ref ref="ASYNC"/>
        <appender-ref ref="STDOUT" />
    </root>

</configuration>