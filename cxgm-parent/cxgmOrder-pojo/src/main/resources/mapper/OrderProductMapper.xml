<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cxgm.dao.OrderProductMapper">
  <resultMap id="BaseResultMap" type="com.cxgm.domain.OrderProduct">
    <result column="id" jdbcType="INTEGER" property="id" />
    <result column="order_id" jdbcType="INTEGER" property="orderId" />
    <result column="product_name" jdbcType="VARCHAR" property="productName" />
    <result column="product_id" jdbcType="INTEGER" property="productId" />
    <result column="product_num" jdbcType="INTEGER" property="productNum" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="good_code" jdbcType="VARCHAR" property="goodCode" />
    <result column="haixin_url" jdbcType="VARCHAR" property="haixinUrl" />
    <result column="price" jdbcType="DECIMAL" property="price" />
    <result column="weight" jdbcType="VARCHAR" property="weight" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, order_id, product_name, product_id, product_num, create_time,good_code,haixin_url,price,weight
  </sql>
  <select id="selectByExample" parameterType="com.cxgm.domain.OrderProductExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from order_product
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  
  <select id="selectOrderDetail" parameterType="java.lang.Integer" resultType="com.cxgm.domain.OrderProductTransfer">
    select pd.`name` as productName,pd.good_code as productCode,bar_code as barCode,product_num as productNum,image as productUrl,rd.price,unit,pd.weight,order_amount as amount,original_price as originalPrice,product_id as productId 
    from order_product as rd LEFT JOIN product as pd on rd.product_id=pd.id left join user_order as od on rd.order_id=od.id
    where order_id = #{orderId,jdbcType=INTEGER}
  </select>
  
  <select id="selectYouZanOrderDetail" parameterType="java.lang.Integer" resultType="com.cxgm.domain.OrderProductTransfer">
    select rd.weight,product_name as productName,pd.good_code as productCode,bar_code as barCode,product_num as productNum,price,order_amount as amount
    from order_product as rd LEFT JOIN haixin_good as pd on rd.good_code=pd.good_code left join user_order as od on rd.order_id=od.id
    where order_id = #{orderId,jdbcType=INTEGER}
  </select>
  
  <delete id="deleteByExample" parameterType="com.cxgm.domain.OrderProductExample">
    delete from order_product
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.cxgm.domain.OrderProduct" useGeneratedKeys="true">
    insert into order_product (order_id, product_name, product_id, 
      product_num, create_time,good_code,haixin_url,price,weight)
    values (#{orderId,jdbcType=INTEGER}, #{productName,jdbcType=VARCHAR}, #{productId,jdbcType=INTEGER}, 
      #{productNum,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP},#{goodCode,jdbcType=VARCHAR},#{haixinUrl,jdbcType=VARCHAR},#{price,jdbcType=DECIMAL},#{weight,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.cxgm.domain.OrderProduct" useGeneratedKeys="true">
    insert into order_product
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="orderId != null">
        order_id,
      </if>
      <if test="productName != null">
        product_name,
      </if>
      <if test="productId != null">
        product_id,
      </if>
      <if test="productNum != null">
        product_num,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="orderId != null">
        #{orderId,jdbcType=INTEGER},
      </if>
      <if test="productName != null">
        #{productName,jdbcType=VARCHAR},
      </if>
      <if test="productId != null">
        #{productId,jdbcType=INTEGER},
      </if>
      <if test="productNum != null">
        #{productNum,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.cxgm.domain.OrderProductExample" resultType="java.lang.Long">
    select count(*) from order_product
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update order_product
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.orderId != null">
        order_id = #{record.orderId,jdbcType=INTEGER},
      </if>
      <if test="record.productName != null">
        product_name = #{record.productName,jdbcType=VARCHAR},
      </if>
      <if test="record.productId != null">
        product_id = #{record.productId,jdbcType=INTEGER},
      </if>
      <if test="record.productNum != null">
        product_num = #{record.productNum,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.goodCode != null">
        good_code = #{record.goodCode,jdbcType=VARCHAR},
      </if>
      <if test="record.haixinUrl != null">
        haixin_url = #{record.haixinUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.price != null">
        price = #{record.price,jdbcType=DECIMAL},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update order_product
    set id = #{record.id,jdbcType=INTEGER},
      order_id = #{record.orderId,jdbcType=INTEGER},
      product_name = #{record.productName,jdbcType=VARCHAR},
      product_id = #{record.productId,jdbcType=INTEGER},
      product_num = #{record.productNum,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      good_code = #{record.goodCode,jdbcType=VARCHAR},
      haixin_url = #{record.haixinUrl,jdbcType=VARCHAR,
      price = #{record.price,jdbcType=DECIMAL}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>