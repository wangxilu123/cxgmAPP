<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cxgm.dao.OrderMapper">
  <resultMap id="BaseResultMap" type="com.cxgm.domain.Order">
    <result column="id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="order_num" jdbcType="VARCHAR" property="orderNum" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="store_id" jdbcType="INTEGER" property="storeId" />
    <result column="pay_type" jdbcType="VARCHAR" property="payType" />
    <result column="order_time" jdbcType="TIMESTAMP" property="orderTime" />
    <result column="order_amount" jdbcType="DECIMAL" property="orderAmount" />
    <result column="remarks" jdbcType="VARCHAR" property="remarks" />
    <result column="address_id" jdbcType="INTEGER" property="addressId" />
    <result column="receive_time" jdbcType="VARCHAR" property="receiveTime" />
    <result column="total_amount" jdbcType="DECIMAL" property="totalAmount" />
    <result column="preferential" jdbcType="DECIMAL" property="preferential" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, user_id, order_num, status, store_id, pay_type, order_time, order_amount, remarks,address_id,receive_time,total_amount,preferential
  </sql>
  <select id="selectByExample" parameterType="com.cxgm.domain.OrderExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.cxgm.domain.OrderExample">
    delete from user_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.cxgm.domain.Order" useGeneratedKeys="true">
    insert into user_order (user_id, order_num, status, 
      store_id, pay_type, order_time, 
      order_amount, remarks,address_id,receive_time,total_amount,preferential)
    values (#{userId,jdbcType=INTEGER}, #{orderNum,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR}, 
      #{storeId,jdbcType=INTEGER}, #{payType,jdbcType=VARCHAR}, #{orderTime,jdbcType=TIMESTAMP}, 
      #{orderAmount,jdbcType=DECIMAL}, #{remarks,jdbcType=VARCHAR},#{addressId,jdbcType=INTEGER},#{receiveTime,jdbcType=VARCHAR},
      #{totalAmount,jdbcType=DECIMAL},#{preferential,jdbcType=DECIMAL})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.cxgm.domain.Order" useGeneratedKeys="true">
    insert into user_order
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="orderNum != null">
        order_num,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="storeId != null">
        store_id,
      </if>
      <if test="payType != null">
        pay_type,
      </if>
      <if test="orderTime != null">
        order_time,
      </if>
      <if test="orderAmount != null">
        order_amount,
      </if>
      <if test="remarks != null">
        remarks,
      </if>
       <if test="addressId != null">
        address_id,
      </if>
       <if test="receiveTime != null">
        receive_time,
      </if>
      <if test="totalAmount != null">
        total_amount,
      </if>
      <if test="preferential != null">
        preferential,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="orderNum != null">
        #{orderNum,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="storeId != null">
        #{storeId,jdbcType=INTEGER},
      </if>
      <if test="payType != null">
        #{payType,jdbcType=VARCHAR},
      </if>
      <if test="orderTime != null">
        #{orderTime,jdbcType=TIMESTAMP},
      </if>
      <if test="orderAmount != null">
        #{orderAmount,jdbcType=DECIMAL},
      </if>
      <if test="remarks != null">
        #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="addressId != null">
        #{addressId,jdbcType=INTEGER},
      </if>
       <if test="receiveTime != null">
        #{receiveTime,jdbcType=VARCHAR},
      </if>
      <if test="totalAmount != null">
        #{total_amount,jdbcType=DECIMAL},
      </if>
      <if test="preferential != null">
        #{preferential,jdbcType=DECIMAL},
      </if>
      
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.cxgm.domain.OrderExample" resultType="java.lang.Long">
    select count(*) from user_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update user_order
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.orderNum != null">
        order_num = #{record.orderNum,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.storeId != null">
        store_id = #{record.storeId,jdbcType=INTEGER},
      </if>
      <if test="record.payType != null">
        pay_type = #{record.payType,jdbcType=VARCHAR},
      </if>
      <if test="record.orderTime != null">
        order_time = #{record.orderTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.orderAmount != null">
        order_amount = #{record.orderAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.remarks != null">
        remarks = #{record.remarks,jdbcType=VARCHAR},
      </if>
       <if test="record.addressId != null">
        address_id = #{record.addressId,jdbcType=INTEGER},
      </if>
       <if test="record.receiveTime != null">
        receive_time = #{record.receiveTime,jdbcType=VARCHAR},
      </if>
      <if test="record.totalAmount != null">
        total_amount = #{record.totalAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.preferential != null">
        preferential = #{record.preferential,jdbcType=DECIMAL},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update user_order
    set id = #{record.id,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      order_num = #{record.orderNum,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=VARCHAR},
      store_id = #{record.storeId,jdbcType=INTEGER},
      pay_type = #{record.payType,jdbcType=VARCHAR},
      order_time = #{record.orderTime,jdbcType=TIMESTAMP},
      order_amount = #{record.orderAmount,jdbcType=DECIMAL},
      remarks = #{record.remarks,jdbcType=VARCHAR},
      address_id = #{record.addressId,jdbcType=INTEGER},
      receive_time = #{record.receiveTime,jdbcType=VARCHAR},
      total_amount = #{record.totalAmount,jdbcType=DECIMAL},
      preferential = #{record.preferential,jdbcType=DECIMAL}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>