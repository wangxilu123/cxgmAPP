<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cxgm.dao.RoleMapper">
  <resultMap id="BaseResultMap" type="com.cxgm.domain.Role">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="value" jdbcType="VARCHAR" property="value" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="is_system" jdbcType="BIT" property="isSystem" />
    <result column="create_by" jdbcType="VARCHAR" property="createBy" />
    <result column="creation_date" jdbcType="TIMESTAMP" property="creationDate" />
    <result column="last_updated_by" jdbcType="VARCHAR" property="lastUpdatedBy" />
    <result column="last_updated_date" jdbcType="TIMESTAMP" property="lastUpdatedDate" />
    <result column="delete_flag" jdbcType="BIT" property="deleteFlag" />
  </resultMap>
  <sql id="Base_Column_List">
    id, name, value, description, is_system, create_by, creation_date, last_updated_by, 
    last_updated_date, delete_flag
  </sql>
  <select id="findById" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from role
    where id = #{id,jdbcType=BIGINT}
  </select>
  
  <select id="selectByName" parameterType="String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from role
    where name = #{rolename,jdbcType=VARCHAR}
  </select>
  
  <delete id="delete" parameterType="java.lang.Long">
    delete from role
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.cxgm.domain.Role">
   <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">  
        SELECT LAST_INSERT_ID()  
    </selectKey>  
    insert into role (id, name, value, 
      description, is_system, create_by, 
      creation_date, last_updated_by, last_updated_date, 
      delete_flag)
    values (#{id,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{value,jdbcType=VARCHAR}, 
      #{description,jdbcType=VARCHAR}, #{isSystem,jdbcType=BIT}, #{createBy,jdbcType=VARCHAR}, 
      #{creationDate,jdbcType=TIMESTAMP}, #{lastUpdatedBy,jdbcType=VARCHAR}, #{lastUpdatedDate,jdbcType=TIMESTAMP}, 
      #{deleteFlag,jdbcType=BIT})
  </insert>
  
  <update id="update" parameterType="com.cxgm.domain.Role">
    update role
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="value != null">
        value = #{value,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="isSystem != null">
        is_system = #{isSystem,jdbcType=BIT},
      </if>
      <if test="createBy != null">
        create_by = #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="creationDate != null">
        creation_date = #{creationDate,jdbcType=TIMESTAMP},
      </if>
      <if test="lastUpdatedBy != null">
        last_updated_by = #{lastUpdatedBy,jdbcType=VARCHAR},
      </if>
      <if test="lastUpdatedDate != null">
        last_updated_date = #{lastUpdatedDate,jdbcType=TIMESTAMP},
      </if>
      <if test="deleteFlag != null">
        delete_flag = #{deleteFlag,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  
  <select id="findByUserName" parameterType="String" resultMap="BaseResultMap">
        select r.*
        from admin a
        LEFT JOIN admin_role ar on a.id= ar.admins
        LEFT JOIN role r on ar.roles=r.id
        where username= #{username}
    </select>
    <!-- 查询所有 -->
	<select id="findListAll" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from role
		where 1 = 1
		order by id asc
	</select>
    
</mapper>