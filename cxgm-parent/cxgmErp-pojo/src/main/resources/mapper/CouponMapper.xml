<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cxgm.dao.CouponMapper">
  <resultMap id="BaseResultMap" type="com.cxgm.domain.Coupon">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="prefix" jdbcType="VARCHAR" property="prefix" />
    <result column="begin_date" jdbcType="TIMESTAMP" property="beginDate" />
    <result column="end_date" jdbcType="TIMESTAMP" property="endDate" />
    <result column="is_enabled" jdbcType="BIT" property="isEnabled" />
    <result column="is_exchange" jdbcType="BIT" property="isExchange" />
    <result column="maximum_price" jdbcType="DECIMAL" property="maximumPrice" />
    <result column="maximum_quantity" jdbcType="INTEGER" property="maximumQuantity" />
    <result column="minimum_price" jdbcType="DECIMAL" property="minimumPrice" />
    <result column="minimum_quantity" jdbcType="INTEGER" property="minimumQuantity" />
    <result column="point" jdbcType="BIGINT" property="point" />
    <result column="price_expression" jdbcType="VARCHAR" property="priceExpression" />
    <result column="creation_date" jdbcType="TIMESTAMP" property="creationDate" />
    <result column="shop_id" jdbcType="INTEGER" property="shopId" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="product_category_id" jdbcType="BIGINT" property="productCategoryId" />
    <result column="product_id" jdbcType="BIGINT" property="productId" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.cxgm.domain.Coupon">
    <result column="introduction" jdbcType="LONGVARCHAR" property="introduction" />
  </resultMap>
  <sql id="Base_Column_List">
    id, name, prefix, begin_date, end_date, is_enabled, is_exchange, maximum_price, maximum_quantity, type,
    minimum_price, minimum_quantity, point, price_expression, creation_date, shop_id, 
    product_category_id,product_id
  </sql>
  <sql id="Base_Column_List1">
    codeId,productId,categoryId,name,introduction,beginDate,endDate,status
  </sql>
  <sql id="Blob_Column_List">
    introduction
  </sql>
  
  <sql id="queryMap">
		<if test="shopId !=null and shopId != ''">
    		and shop_id=#{shopId,jdbcType=INTEGER}
		</if>
		
		<if test="productCategoryId !=null and productCategoryId != ''">
    		and product_category_id=#{productCategoryId,jdbcType=BIGINT}
		</if>
		
		<if test="productId !=null and productId != ''">
    		and product_id=#{productId,jdbcType=BIGINT}
		</if>
		<if test="name !=null and name != ''">
    		and name = #{name,jdbcType=VARCHAR}
		</if>
	</sql>
  
  <select id="select" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from coupon
    where id = #{id,jdbcType=BIGINT}
  </select>
  
  <select id="findCouponsWithParam" parameterType="map" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from coupon
    where 1=1
    <include refid="queryMap" />
  </select>
  <delete id="delete" parameterType="java.lang.Long">
    delete from coupon
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.cxgm.domain.Coupon">
    insert into coupon (id, name, prefix, 
      begin_date, end_date, is_enabled, 
      is_exchange, maximum_price, maximum_quantity, 
      minimum_price, minimum_quantity, point, 
      price_expression, creation_date, shop_id, 
      product_category_id,product_id, introduction,type)
    values (#{id,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{prefix,jdbcType=VARCHAR}, 
      #{beginDate,jdbcType=TIMESTAMP}, #{endDate,jdbcType=TIMESTAMP}, #{isEnabled,jdbcType=BIT}, 
      #{isExchange,jdbcType=BIT}, #{maximumPrice,jdbcType=DECIMAL}, #{maximumQuantity,jdbcType=INTEGER}, 
      #{minimumPrice,jdbcType=DECIMAL}, #{minimumQuantity,jdbcType=INTEGER}, #{point,jdbcType=BIGINT}, 
      #{priceExpression,jdbcType=VARCHAR}, #{creationDate,jdbcType=TIMESTAMP}, #{shopId,jdbcType=INTEGER}, 
      #{productCategoryId,jdbcType=BIGINT}, #{productId,jdbcType=BIGINT},#{introduction,jdbcType=LONGVARCHAR},#{type,jdbcType=INTEGER})
  </insert>
  
  <update id="update" parameterType="com.cxgm.domain.Coupon">
    update coupon
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="prefix != null">
        prefix = #{prefix,jdbcType=VARCHAR},
      </if>
      <if test="beginDate != null">
        begin_date = #{beginDate,jdbcType=TIMESTAMP},
      </if>
      <if test="endDate != null">
        end_date = #{endDate,jdbcType=TIMESTAMP},
      </if>
      <if test="isEnabled != null">
        is_enabled = #{isEnabled,jdbcType=BIT},
      </if>
      <if test="isExchange != null">
        is_exchange = #{isExchange,jdbcType=BIT},
      </if>
      <if test="maximumPrice != null">
        maximum_price = #{maximumPrice,jdbcType=DECIMAL},
      </if>
      <if test="maximumQuantity != null">
        maximum_quantity = #{maximumQuantity,jdbcType=INTEGER},
      </if>
      <if test="minimumPrice != null">
        minimum_price = #{minimumPrice,jdbcType=DECIMAL},
      </if>
      <if test="minimumQuantity != null">
        minimum_quantity = #{minimumQuantity,jdbcType=INTEGER},
      </if>
      <if test="point != null">
        point = #{point,jdbcType=BIGINT},
      </if>
      <if test="priceExpression != null">
        price_expression = #{priceExpression,jdbcType=VARCHAR},
      </if>
      <if test="creationDate != null">
        creation_date = #{creationDate,jdbcType=TIMESTAMP},
      </if>
      <if test="shopId != null">
        shop_id = #{shopId,jdbcType=INTEGER},
      </if>
        product_category_id = #{productCategoryId,jdbcType=BIGINT},
        product_id = #{productId,jdbcType=BIGINT},
      <if test="introduction != null">
        introduction = #{introduction,jdbcType=LONGVARCHAR},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER}
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  
  <select id="findCouponsByProduct" parameterType="map" resultType="com.cxgm.domain.CouponDetail">
    select cd.id as codeId,cd.`status`,cp.`name`,cp.introduction,cp.begin_date as beginDate,cp.end_date as endDate,cp.product_category_id as categoryId,cp.product_id as productId,cp.price_expression as priceExpression,cp.minimum_price as maximumPrice
    from coupon  as cp left join coupon_code as cd on cp.id=cd.coupon_id where 1=1
      <foreach collection="amountList" item="item" index="index">
           <if test="index == 0">
           and
           </if>
           <if test="index != 0">
           or
           </if>
           (cp.product_category_id = #{item.categoryId} and <![CDATA[cp.minimum_price<=#{item.amount}]]> and cp.product_id is null and user_id=#{userId,jdbcType=INTEGER} and `status`=0  <![CDATA[and NOW() >=  begin_date and NOW() <= end_date]]>) 
      </foreach>
  </select>
  
   <select id="findCouponsByProduct1" parameterType="map" resultType="com.cxgm.domain.CouponDetail">
    select cd.id as codeId,cd.`status`,cp.`name`,cp.introduction,cp.begin_date as beginDate,cp.end_date as endDate,cp.product_category_id as categoryId,cp.product_id as productId,cp.price_expression as priceExpression,cp.minimum_price as maximumPrice
    from coupon  as cp left join coupon_code as cd on cp.id=cd.coupon_id where 1=1
     and cp.product_id=#{productId,jdbcType=INTEGER} and user_id=#{userId,jdbcType=INTEGER} and `status`=0 and <![CDATA[cp.minimum_price<=#{amount,jdbcType=DECIMAL}]]> and cp.product_category_id=0 <![CDATA[and NOW() >=  begin_date and NOW() <= end_date]]>
  </select>
  
  <select id="findCouponsByProduct2" parameterType="map" resultType="com.cxgm.domain.CouponDetail">
    select cd.id as codeId,cd.`status`,cp.`name`,cp.introduction,cp.begin_date as beginDate,cp.end_date as endDate,cp.product_category_id as categoryId,cp.product_id as productId,cp.price_expression as priceExpression,cp.minimum_price as maximumPrice
    from coupon  as cp left join coupon_code as cd on cp.id=cd.coupon_id where 1=1
      and user_id=#{userId,jdbcType=INTEGER} and `status`=0 and <![CDATA[cp.minimum_price<=#{totalAmount,jdbcType=DECIMAL}]]> and cp.product_category_id=0 and cp.product_id is null  <![CDATA[and NOW() >=  begin_date and NOW() <= end_date]]>
  </select>
  
</mapper>