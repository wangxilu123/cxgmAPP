<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cxgm.dao.HaixinGoodMapper">
  <resultMap id="BaseResultMap" type="com.cxgm.domain.HaixinGood">
    <result column="id" jdbcType="INTEGER" property="id" />
    <result column="good_code" jdbcType="VARCHAR" property="goodCode" />
    <result column="good_name" jdbcType="VARCHAR" property="goodName" />
    <result column="short_name" jdbcType="VARCHAR" property="shortName" />
    <result column="bar_code" jdbcType="VARCHAR" property="barCode" />
    <result column="brand_name" jdbcType="VARCHAR" property="brandName" />
    <result column="specifications" jdbcType="VARCHAR" property="specifications" />
    <result column="unit" jdbcType="VARCHAR" property="unit" />
    <result column="producing_area" jdbcType="VARCHAR" property="producingArea" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, good_code, good_name, short_name, bar_code, brand_name, specifications, unit, 
    producing_area
  </sql>
  <select id="selectByExample" parameterType="com.cxgm.domain.HaixinGoodExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from haixin_good
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.cxgm.domain.HaixinGoodExample">
    delete from haixin_good
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.cxgm.domain.HaixinGood" useGeneratedKeys="true">
    insert into haixin_good (good_code, good_name, short_name, 
      bar_code, brand_name, specifications, 
      unit, producing_area)
    values (#{goodCode,jdbcType=VARCHAR}, #{goodName,jdbcType=VARCHAR}, #{shortName,jdbcType=VARCHAR}, 
      #{barCode,jdbcType=VARCHAR}, #{brandName,jdbcType=VARCHAR}, #{specifications,jdbcType=VARCHAR}, 
      #{unit,jdbcType=VARCHAR}, #{producingArea,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.cxgm.domain.HaixinGood" useGeneratedKeys="true">
    insert into haixin_good
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="goodCode != null">
        good_code,
      </if>
      <if test="goodName != null">
        good_name,
      </if>
      <if test="shortName != null">
        short_name,
      </if>
      <if test="barCode != null">
        bar_code,
      </if>
      <if test="brandName != null">
        brand_name,
      </if>
      <if test="specifications != null">
        specifications,
      </if>
      <if test="unit != null">
        unit,
      </if>
      <if test="producingArea != null">
        producing_area,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="goodCode != null">
        #{goodCode,jdbcType=VARCHAR},
      </if>
      <if test="goodName != null">
        #{goodName,jdbcType=VARCHAR},
      </if>
      <if test="shortName != null">
        #{shortName,jdbcType=VARCHAR},
      </if>
      <if test="barCode != null">
        #{barCode,jdbcType=VARCHAR},
      </if>
      <if test="brandName != null">
        #{brandName,jdbcType=VARCHAR},
      </if>
      <if test="specifications != null">
        #{specifications,jdbcType=VARCHAR},
      </if>
      <if test="unit != null">
        #{unit,jdbcType=VARCHAR},
      </if>
      <if test="producingArea != null">
        #{producingArea,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.cxgm.domain.HaixinGoodExample" resultType="java.lang.Long">
    select count(*) from haixin_good
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update haixin_good
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.goodCode != null">
        good_code = #{record.goodCode,jdbcType=VARCHAR},
      </if>
      <if test="record.goodName != null">
        good_name = #{record.goodName,jdbcType=VARCHAR},
      </if>
      <if test="record.shortName != null">
        short_name = #{record.shortName,jdbcType=VARCHAR},
      </if>
      <if test="record.barCode != null">
        bar_code = #{record.barCode,jdbcType=VARCHAR},
      </if>
      <if test="record.brandName != null">
        brand_name = #{record.brandName,jdbcType=VARCHAR},
      </if>
      <if test="record.specifications != null">
        specifications = #{record.specifications,jdbcType=VARCHAR},
      </if>
      <if test="record.unit != null">
        unit = #{record.unit,jdbcType=VARCHAR},
      </if>
      <if test="record.producingArea != null">
        producing_area = #{record.producingArea,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update haixin_good
    set id = #{record.id,jdbcType=INTEGER},
      good_code = #{record.goodCode,jdbcType=VARCHAR},
      good_name = #{record.goodName,jdbcType=VARCHAR},
      short_name = #{record.shortName,jdbcType=VARCHAR},
      bar_code = #{record.barCode,jdbcType=VARCHAR},
      brand_name = #{record.brandName,jdbcType=VARCHAR},
      specifications = #{record.specifications,jdbcType=VARCHAR},
      unit = #{record.unit,jdbcType=VARCHAR},
      producing_area = #{record.producingArea,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>